<%@ page import="java.sql.*, java.text.SimpleDateFormat" %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>XPectable Fixture</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="resources/css/fixture.css">
    <style>

.date {
    
    padding-top: 10px;
    padding-left: 27.5%;
    font-size: 1.1em;
    color: #555;
}

table {
    width: 50%;
    left: 25%;
    position: relative;
    margin-bottom: 20px;
}

th, td {
    border: 1px solid #ddd;
    padding: 12px;
    text-align: left;
}

th {
    background-color: #FC6736;
    color: white;
    font-weight: bold;
    text-align:center;
}

td {
    background-color: #fff;
}

tr:nth-child(even) td {
    background-color: #f2f2f2;
}

tr:hover td {
    background-color: #e9ecef;
}

h2 {
    text-align: center;
    padding-top: 200px;
    color: #343a40;
}

h4 {
    padding-left: 70%;
    padding-top: 15px;
    color: #343a40;
}

h5 {
    padding-top: 10px;
    font-size: 1.2em;
    color: #343a40;
}

        
    </style>
</head>
<body>

<nav class="menu_box">
    <div class="logo">
        <hr />
        <a href="index.html"><h3><b style="color:#FC6736;font-size:35px">XP</b>ectable</h3></a>
        <hr />
    </div>
    <ul>
        <li><a class="home" href="index.jsp"><i class="fa fa-home fa-fw"></i> Home</a></li>
        <li><a href="fixture.jsp"><i class="fa fa-calendar fa-fw"></i> Fixture</a></li>
        <li><a href="standing.jsp"><i class="fa-solid fa-ranking-star fa-fw"></i> Standing</a></li>
        <li><a href="contact.html"><i class="fa fa-envelope fa-fw"></i> Contact</a></li>
        <li><a href="#"><i class="fa fa-comment fa-fw"></i> Feedback</a></li>
        <div class="social_media">
            <a href="#"><i class="fa-brands fa-linkedin" style="color:#EFECEC"></i></a>
            <a href="#"><i class="fa-brands fa-github" style="color:#EFECEC"></i></a>
        </div>
    </ul>
</nav>

<div class="filter-dropdown">
      <label for="drop-btn" class="dropdown-label">Filter:</label>
      <button onclick="dropdownFunction()" id="drop-btn" class="dropdown-btn">All</button>
      <ul id="drop-content" class="dropdown-content">
        <li><a href="fixture.jsp?league_id=-1">All</a></li>
        <li><a href="fixture.jsp?league_id=1">Massachusetts</a>
            <ul>
                <li><a href="fixture.jsp?league_id=301">Division 1</a></li>
                <li><a href="fixture.jsp?league_id=302">Division 2</a></li>
            </ul>
        </li>
        <li><a href="fixture.jsp?league_id=2">New Jersey</a>
            <ul>
                <li><a href="fixture.jsp?league_id=201">Division 1</a></li>
                <li><a href="fixture.jsp?league_id=202">Division 2</a></li>
            </ul>
        </li>
        <li><a href="fixture.jsp?league_id=3">New York</a>
            <ul>
                <li><a href="fixture.jsp?league_id=101">Division 1</a></li>
                <li><a href="fixture.jsp?league_id=102">Division 2</a></li>
            </ul>
        </li>
        <li><a href="fixture.jsp?league_id=4">Pennsylvania</a>
            <ul>
                <li><a href="fixture.jsp?league_id=401">Division 1</a></li>
                <li><a href="fixture.jsp?league_id=402">Division 2</a></li>
            </ul>
        </li>
        <li><a href="fixture.jsp?league_id=5">Virginia</a>
            <ul>
                <li><a href="fixture.jsp?league_id=501">Division 1</a></li>
                <li><a href="fixture.jsp?league_id=502">Division 2</a></li>
            </ul>
        </li>
    </ul>
</div>


<h2 style="text-align: center; padding-top: 200px;">Fixture</h2>

<%
    // Initialize variables to keep track of the current round and date
    int currentRound = -1;
    Date currentDate = null;

    // Default SQL query
    String sql = "SELECT * FROM game ORDER BY game_round, game_date";

    // Retrieve league_id parameter from the request
    String leagueIdParam = request.getParameter("league_id");
    int leagueId = -1; // Default value or handle null case
    if (leagueIdParam != null && !leagueIdParam.isEmpty()) {
        leagueId = Integer.parseInt(leagueIdParam);
    }

    // Check if a specific league is selected
    if (leagueId != -1) {
        // Adjust SQL query to filter by league
        sql = "SELECT * FROM game INNER JOIN team ON game.home_team_id = team.team_id WHERE team.league_id = ? ORDER BY game_round, game_date";
    }

    try {
        // Load the MySQL JDBC driver
        Class.forName("com.mysql.cj.jdbc.Driver");

        // Establish the database connection
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/xpectable_data", "root", "MyPass123!");

        // Prepare the SQL query
        PreparedStatement statement = conn.prepareStatement(sql);

        // Set league parameter if applicable
        if (leagueId != -1) {
            statement.setInt(1, leagueId);
        }

        // Execute the query
        ResultSet rs = statement.executeQuery();

        // Iterate through the result set
        while (rs.next()) {
            int gameId = rs.getInt("game_id");
            int round = rs.getInt("game_round");
            Date gameDate = rs.getDate("game_date");
            Time gameTime = rs.getTime("game_time");
            int homeTeamId = rs.getInt("home_team_id");
            int awayTeamId = rs.getInt("away_team_id");

            // Retrieve result for the current game
            PreparedStatement resultStatement = conn.prepareStatement("SELECT * FROM result WHERE game_id = ?");
            resultStatement.setInt(1, gameId);
            ResultSet resultRs = resultStatement.executeQuery();

            int homeScore = -1;
            int awayScore = -1;
            if (resultRs.next()) {
                homeScore = resultRs.getInt("home_team_score");
                awayScore = resultRs.getInt("away_team_score");
            }

            resultRs.close();
            resultStatement.close();

            // Handle new round
            if (round != currentRound) {
                if (currentRound != -1) {
                    %></tbody></table><% // Close previous round table
                }
                %>
                <div class="round">
                    <h4 style="padding-left: 70%; padding-top: 15px;">Round <%= round %></h4>
                <%
                currentRound = round;
            }

            // Handle new date
            if (!gameDate.equals(currentDate)) {
                if (currentDate != null) {
                    %></tbody></table><% // Close previous date table
                }
                %>
                <h5 class="date" style="padding-top: 10px;"><%= gameDate %></h5>
                <table>
                    <thead>
                        <tr>
                            <th>Home Team</th>
                            <th><%= (homeScore != -1 && awayScore != -1) ? "Score" : "Time" %></th>
                            <th>Away Team</th>
                        </tr>
                    </thead>
                    <tbody>
                <%
                currentDate = gameDate;
            }

            // Retrieve home team name
            PreparedStatement homeTeamStatement = conn.prepareStatement("SELECT team_name FROM team WHERE team_id = ?");
            homeTeamStatement.setInt(1, homeTeamId);
            ResultSet homeTeamResult = homeTeamStatement.executeQuery();
            String homeTeamName = homeTeamResult.next() ? homeTeamResult.getString("team_name") : "";
            homeTeamStatement.close();
            homeTeamResult.close();

            // Retrieve away team name
            PreparedStatement awayTeamStatement = conn.prepareStatement("SELECT team_name FROM team WHERE team_id = ?");
            awayTeamStatement.setInt(1, awayTeamId);
            ResultSet awayTeamResult = awayTeamStatement.executeQuery();
            String awayTeamName = awayTeamResult.next() ? awayTeamResult.getString("team_name") : "";
            awayTeamStatement.close();
            awayTeamResult.close();

            // Format time in 12-hour format
            SimpleDateFormat sdf = new SimpleDateFormat("hh:mm a");
            String formattedTime = sdf.format(gameTime);
            %>
            <tr>
                <td><%= homeTeamName %></td>
                <td style="text-align:center;"><%= (homeScore != -1 && awayScore != -1) ? homeScore + ":" + awayScore : formattedTime %></td>
                <td style="text-align:right;"><%= awayTeamName %></td>
            </tr>
            <%
        }

        // Close the last date and round table
        if (currentDate != null) {
            %></tbody></table><%
        }
        if (currentRound != -1) {
            %></div><%
        }

        rs.close();
        statement.close();
        conn.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
%>


</body>
<script src="/xpec/src/main/webapp/resources/js/fixture.js"></script>
</html>
